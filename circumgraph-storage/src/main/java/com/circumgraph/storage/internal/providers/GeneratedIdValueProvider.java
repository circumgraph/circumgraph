package com.circumgraph.storage.internal.providers;

import java.util.Objects;

import com.circumgraph.model.ScalarDef;
import com.circumgraph.model.SimpleValueDef;
import com.circumgraph.storage.Value;
import com.circumgraph.storage.internal.AutoGeneratedIdValue;
import com.circumgraph.storage.types.ValueProvider;

import reactor.core.publisher.Mono;
import se.l4.ylem.ids.LongIdGenerator;

/**
 * Provider that generates an identifier.
 */
public class GeneratedIdValueProvider
	implements ValueProvider
{
	private final LongIdGenerator ids;

	public GeneratedIdValueProvider(LongIdGenerator ids)
	{
		this.ids = ids;
	}

	@Override
	public SimpleValueDef getType()
	{
		return ScalarDef.ID;
	}

	@Override
	public Mono<Value> create()
	{
		return Mono.just(new AutoGeneratedIdValue(ids.next()));
	}

	@Override
	public int hashCode()
	{
		return Objects.hash(ids);
	}

	@Override
	public boolean equals(Object obj)
	{
		if(this == obj) return true;
		if(obj == null) return false;
		if(getClass() != obj.getClass()) return false;
		GeneratedIdValueProvider other = (GeneratedIdValueProvider) obj;
		return Objects.equals(ids, other.ids);
	}
}
