package com.circumgraph.storage.internal;

import com.circumgraph.storage.scalars.ScalarConversionException;

import se.l4.ylem.ids.Base62LongIdCodec;
import se.l4.ylem.ids.LongIdCodec;

/**
 * Utilities for working with auto-generated identifiers.
 */
public class AutoGeneratedIds
{
	private static final LongIdCodec<String> CODEC = new Base62LongIdCodec();

	private AutoGeneratedIds()
	{
	}

	/**
	 * Encode the given identifier into a string.
	 *
	 * @param id
	 * @return
	 */
	public static String encode(long id)
	{
		return CODEC.encode(id);
	}

	/**
	 * Decode the given string into an identifier.
	 *
	 * @param id
	 * @return
	 */
	public static long decode(String id)
	{
		if(id == null)
		{
			throw new ScalarConversionException("Invalid ID, was: " + id);
		}

		try
		{
			return CODEC.decode(id);
		}
		catch(NumberFormatException e)
		{
			throw new ScalarConversionException("Invalid ID format, was: " + id);
		}
	}
}
